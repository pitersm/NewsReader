// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using News_Reader.DAL.Data;

namespace News_Reader.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200806054428_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("News_Reader.DAL.Models.FeedCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedCategories");
                });

            modelBuilder.Entity("News_Reader.DAL.Models.RSSFeed", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("XMLFileAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("RSSFeeds");
                });

            modelBuilder.Entity("News_Reader.DAL.Models.RSSFeed", b =>
                {
                    b.HasOne("News_Reader.DAL.Models.FeedCategory", "Category")
                        .WithMany("Feeds")
                        .HasForeignKey("CategoryId")
                        .IsRequired(false);
                });
#pragma warning restore 612, 618
        }
    }
}
